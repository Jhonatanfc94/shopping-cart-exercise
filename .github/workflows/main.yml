name: Selenium Tests with Maven

on:
  push:
    branches:
      - main  # Cambia a tu rama principal (main, master, etc.)
  pull_request:
    branches:
      - main  # Cambia a tu rama principal

jobs:
  test:
    runs-on: ubuntu-latest  # Usa el último Ubuntu para compatibilidad

    strategy:
      matrix:
        browser: [chrome, firefox]  # Ejecuta pruebas en Chrome y Firefox
      fail-fast: false  # No detener el workflow si una combinación falla

    steps:
      # Paso 1: Checkout del código del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configura Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'  # Usa Temurin (Adoptium) como distribución de Java

      # Paso 3: Configura el navegador usando WebDriverManager
      - name: Set up browser
        run: |
          echo "Installing ${{ matrix.browser }}"
          if [ "${{ matrix.browser }}" = "chrome" ]; then
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
          elif [ "${{ matrix.browser }}" = "firefox" ]; then
            sudo apt-get update
            sudo apt-get install -y firefox
          fi

      # Paso 4: Ejecuta las pruebas con Maven
      - name: Run tests with Maven
        run: mvn test -Dbrowser=${{ matrix.browser }}  # Pasa el navegador como parámetro

      # Paso 5: Sube los resultados de las pruebas (reportes de TestNG o Cucumber)
      - name: Upload test results
        if: always()  # Sube los resultados incluso si las pruebas fallan
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            target/surefire-reports  # Reportes de TestNG
            target/cucumber-reports # Reportes de Cucumber (si los usas)

      # Paso 6: Notifica el resultado del workflow (opcional)
      - name: Notify workflow status
        if: always()  # Notifica siempre, incluso si el workflow falla
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
            });
            const commitMessage = commits[0].commit.message;

            const message = `Workflow ${{ github.workflow }} (${{ github.run_id }}) for ${{ matrix.browser }} completed with status: ${{ job.status }}\n\nCommit: ${commitMessage}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });